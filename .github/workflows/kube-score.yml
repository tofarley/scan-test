# This is a basic workflow to help you get started with Actions

name: kube-score

env:
  KUBESCORE_VERSION: '1.17.0'
  
  

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "scan"
  scan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checkout our project
    - uses: actions/checkout@v3

    - name: Run kube-score
      run: |
        /usr/bin/curl -sSLO https://github.com/zegl/kube-score/releases/download/v${KUBESCORE_VERSION}/kube-score_${KUBESCORE_VERSION}_linux_amd64
        /usr/bin/chmod +x kube-score_${KUBESCORE_VERSION}_linux_amd64
        # The following line will cause the pipeline to fail when there are security findings in the kubernetes manifest files.
        # Uncomment the following line to allow the CI/CD pipeline to succeed even when the scan has findings.
        set -o pipefail
        ./kube-score_${KUBESCORE_VERSION}_linux_amd64 score *.yaml | /usr/bin/tee ./kube-score-results.txt

    # Upload artifacts
    - uses: actions/upload-artifact@v3
      # Upload the findings always, even when there are security findings that cause the scan to fail.
      if: always()
      with:
        name: kube-score-results
        path: kube-score-results.txt
        retention-days: 7
